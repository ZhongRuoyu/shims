#!/bin/bash

# shellcheck source=/dev/null
source "$(dirname "$0")/common/base.sh"

brew_prefix="$(brew --prefix)"

get_version_suffix() {
  builtin echo "$1" | sed -En 's/^.*-(.*)/\1/p'
}

remove_version_suffix() {
  if [[ -n "$(get_version_suffix "$1")" ]]; then
    builtin echo "$1" | sed -En 's/^(.*)-.*/\1/p'
  else
    builtin echo "$1"
  fi
}

if builtin echo "${shim_basename:?}" | grep -Eq '^(c|g|clang)\+\+'; then
  cc="c++"
  cc_variable="CXX"
  cc_variable_fallback="clang++"
else
  cc="cc"
  cc_variable="CC"
  cc_variable_fallback="clang"
fi

if [[ -z "$NO_CCACHE" ]]; then
  ccache="$(which ccache)"
else
  ccache=""
fi

if [[ -n "${!cc_variable}" ]] && echo "${!cc_variable}" | grep -Eq '^/'; then
  exec $ccache "${!cc_variable}" "$@"
fi

if [[ -z "${!cc_variable}" ]]; then
  export "$cc_variable"="$cc_variable_fallback"
fi

cc_variable_version_suffix="$(get_version_suffix ${!cc_variable})"
cc_variable_noversion="$(remove_version_suffix ${!cc_variable})"

which_cc="$(which ${!cc_variable})"
if [[ -n "$which_cc" ]]; then
  exec $ccache "$which_cc" "$@"
fi

if [[ "$cc_variable_noversion" = "clang" ]] ||
  [[ "$cc_variable_noversion" = "clang++" ]]; then
  if [[ -n "$cc_variable_version_suffix" ]]; then
    cc_version="$cc_variable_version_suffix"
  else
    cc_version="$(
      find "$brew_prefix/opt" -type l -name "llvm@*" |
        sed -En 's/.*@(.*)/\1/p' |
        sort -nr |
        head -n 1
    )"
  fi
  exec $ccache "$brew_prefix/opt/llvm@$cc_version/bin/$cc_variable_noversion" "$@"
elif [[ "$cc_variable_noversion" = "gcc" ]] ||
  [[ "$cc_variable_noversion" = "g++" ]]; then
  if [[ -n "$cc_variable_version_suffix" ]]; then
    cc_version="$cc_variable_version_suffix"
  else
    cc_version="$(
      find "$brew_prefix/opt" -type l -name "gcc@*" |
        sed -En 's/.*@(.*)/\1/p' |
        sort -nr |
        head -n 1
    )"
  fi
  exec $ccache "$brew_prefix/opt/gcc@$cc_version/bin/$cc_variable_noversion-$cc_version" "$@"
else
  exec $ccache "$cc_variable"
fi
